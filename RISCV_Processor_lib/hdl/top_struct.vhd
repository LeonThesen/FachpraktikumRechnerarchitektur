--
-- VHDL Architecture RISCV_Processor_lib.top.struct
--
-- Created:
--          by - st161569.st161569 (pc043)
--          at - 18:57:55 07/11/24
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2022.3 Built on 14 Jul 2022 at 13:56:12
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
LIBRARY RISCV_Processor_lib;
USE RISCV_Processor_lib.types.ALL;


ARCHITECTURE struct OF top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL io_control_cpu : io_control_t;
   SIGNAL io_rdata       : word_t;
   SIGNAL io_wdata_cpu   : word_t;
   SIGNAL res_n          : std_logic;


   -- Component Declarations
   COMPONENT cpu
   PORT (
      clk            : IN     std_logic ;
      io_rdata       : IN     word_t ;
      res_n          : IN     std_logic ;
      io_control_cpu : OUT    io_control_t ;
      io_wdata_cpu   : OUT    word_t 
   );
   END COMPONENT;
   COMPONENT io
   PORT (
      button_1       : IN     std_logic ;
      button_2       : IN     std_logic ;
      button_3       : IN     std_logic ;
      clk            : IN     std_logic ;
      io_control_cpu : IN     io_control_t ;
      io_wdata_cpu   : IN     word_t ;
      res_n          : IN     std_logic ;
      switches       : IN     std_logic_vector (9 DOWNTO 0);
      io_rdata       : OUT    word_t ;
      seven_seg_1    : OUT    std_logic_vector (6 DOWNTO 0);
      seven_seg_2    : OUT    std_logic_vector (6 DOWNTO 0);
      seven_seg_3    : OUT    std_logic_vector (6 DOWNTO 0);
      seven_seg_4    : OUT    std_logic_vector (6 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT res_synchronizer
   PORT (
      clk     : IN     std_logic ;
      res_key : IN     std_logic ;
      res_n   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : cpu USE ENTITY RISCV_Processor_lib.cpu;
   FOR ALL : io USE ENTITY RISCV_Processor_lib.io;
   FOR ALL : res_synchronizer USE ENTITY RISCV_Processor_lib.res_synchronizer;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   cpu_i : cpu
      PORT MAP (
         clk            => clk,
         io_rdata       => io_rdata,
         res_n          => res_n,
         io_control_cpu => io_control_cpu,
         io_wdata_cpu   => io_wdata_cpu
      );
   io_i : io
      PORT MAP (
         button_1       => button_1,
         button_2       => button_2,
         button_3       => button_3,
         clk            => clk,
         io_control_cpu => io_control_cpu,
         io_wdata_cpu   => io_wdata_cpu,
         res_n          => res_n,
         switches       => switches,
         io_rdata       => io_rdata,
         seven_seg_1    => seven_seg_1,
         seven_seg_2    => seven_seg_2,
         seven_seg_3    => seven_seg_3,
         seven_seg_4    => seven_seg_4
      );
   res_synchronizer_i : res_synchronizer
      PORT MAP (
         clk     => clk,
         res_key => res_key,
         res_n   => res_n
      );

END struct;
