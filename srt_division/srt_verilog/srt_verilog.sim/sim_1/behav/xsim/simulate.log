Time resolution is 1 ps
Starting Division
un-normalized divisor = 000000000000000000010000111101000, dividend = 0000000000000000000000000000000000000000000000000100011101111100
divisor shifted by  18 for normalization. normalized divisor = 010000111101000000000000000000000
iterations necessary for division are (width+amount shifted / 2) =         24
remainder_r gets shifted by 0 to align the number
remainder_r is 000000000000000000000000000000000000000000000000001000111011111000. decision bits are 000000
        no add or sub and shift. quotient[ 48] = 0
remainder_r is 000000000000000000000000000000000000000000000000100011101111100000. decision bits are 000000
        no add or sub and shift. quotient[ 46] = 0
remainder_r is 000000000000000000000000000000000000000000000010001110111110000000. decision bits are 000000
        no add or sub and shift. quotient[ 44] = 0
remainder_r is 000000000000000000000000000000000000000000001000111011111000000000. decision bits are 000000
        no add or sub and shift. quotient[ 42] = 0
remainder_r is 000000000000000000000000000000000000000000100011101111100000000000. decision bits are 000000
        no add or sub and shift. quotient[ 40] = 0
remainder_r is 000000000000000000000000000000000000000010001110111110000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 38] = 0
remainder_r is 000000000000000000000000000000000000001000111011111000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 36] = 0
remainder_r is 000000000000000000000000000000000000100011101111100000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 34] = 0
remainder_r is 000000000000000000000000000000000010001110111110000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 32] = 0
remainder_r is 000000000000000000000000000000001000111011111000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 30] = 0
remainder_r is 000000000000000000000000000000100011101111100000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 28] = 0
remainder_r is 000000000000000000000000000010001110111110000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 26] = 0
remainder_r is 000000000000000000000000001000111011111000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 24] = 0
remainder_r is 000000000000000000000000100011101111100000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 22] = 0
remainder_r is 000000000000000000000010001110111110000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 20] = 0
remainder_r is 000000000000000000001000111011111000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 18] = 0
remainder_r is 000000000000000000100011101111100000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 16] = 0
remainder_r is 000000000000000010001110111110000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 14] = 0
remainder_r is 000000000000001000111011111000000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 12] = 0
remainder_r is 000000000000100011101111100000000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[ 10] = 0
remainder_r is 000000000010001110111110000000000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[  8] = 0
remainder_r is 000000001000111011111000000000000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[  6] = 0
remainder_r is 000000100011101111100000000000000000000000000000000000000000000000. decision bits are 000000
        no add or sub and shift. quotient[  4] = 0
remainder_r is 000010001110111110000000000000000000000000000000000000000000000000. <- quotient[  2] = 1. decision bits are 000010
        sub divisor_r
remainder_r is 110111111110111000000000000000000000000000000000000000000000000000. <- quotient[  0] = -2. decision bits are 110111
        add 2*divisor_r
remainder_r is 000001110101100000000000000000000000000000000000000000000000000000
remainder is positive so shift remainder
remainder = 000000000000000000000001110101100, quotient = 0000000000000000000000000000000000000000000000000000000000000010
$finish called at time : 670 ns : File "/home/leon/source/srt_verilog/srt_verilog.srcs/sources_1/new/top_tb.v" Line 61
